{"version":3,"sources":["assets/VVVVVV.jpg","assets/Pokemon.jpg","assets/Mini Ninjas.jpg","assets/Zelda.jpg","assets/Assassin's Creed Brotherhood.jpg","assets/Attempt3.png","assets/ACS_SC_39_SDCC_EvieAssassination_watermark_211604.0.jpg","components/CarouselComponent.js","Home.js","About.js","Contact.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","CarouselComponent","Container","Carousel","Item","className","src","VVVVVV","alt","fluid","Pokemon","MiniNinjas","Zelda","Assassin","Home","channel","height","muted","targetId","width","layout","About","Contact","useState","isLoading","setLoading","useEffect","Promise","resolve","setTimeout","then","Form","Group","controlId","Label","Control","type","placeholder","as","rows","Button","style","backgroundColor","disabled","onClick","NoMatch","Layout","props","children","NavigationBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","target","Cyna","Jumbotron","App","backgroundImage","Background","Fragment","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a18c4f7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/VVVVVV.b4d8d57f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Pokemon.f45781d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mini Ninjas.521654c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zelda.14c8d1cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Assassin's Creed Brotherhood.30661929.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Attempt3.f6471cde.png\";","module.exports = __webpack_public_path__ + \"static/media/ACS_SC_39_SDCC_EvieAssassination_watermark_211604.0.3059ed00.jpg\";","import React from 'react';\nimport {Carousel, Container} from 'react-bootstrap';\nimport VVVVVV from '../assets/VVVVVV.jpg';\nimport Pokemon from \"../assets/Pokemon.jpg\";\nimport MiniNinjas from \"../assets/Mini Ninjas.jpg\";\nimport Zelda from \"../assets/Zelda.jpg\";\nimport Assassin from \"../assets/Assassin's Creed Brotherhood.jpg\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n    .carousel {\n        background-color: black;\n    }\n`;\n\nexport const CarouselComponent = () => (\n    <Styles>\n    <Container>\n        <Carousel>\n            <Carousel.Item>\n                <img\n                    className=\"d-block mx-auto w-50\"\n                    src={VVVVVV}\n                    alt=\"\"\n                    fluid\n                />\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block mx-auto w-50\"\n                    src={Pokemon}\n                    alt=\"Second\"\n                />\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block mx-auto w-50\"\n                    src={MiniNinjas}\n                    alt=\"Third\"\n                />\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block mx-auto w-50\"\n                    src={Zelda}\n                    alt=\"Fourth\"\n                />\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block mx-auto w-50\"\n                    src={Assassin}\n                    alt=\"Fifth\"\n                />\n            </Carousel.Item>\n        </Carousel>\n    </Container>\n    </Styles>\n)","import React from \"react\";\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\";\nimport { CarouselComponent } from \"./components/CarouselComponent\";\n\nexport const Home = () => {\n  return (\n    <div>\n      <CarouselComponent />\n      <p>Home</p>\n      <ReactTwitchEmbedVideo\n        channel=\"cynaschism\"\n        height=\"480\"\n        muted={false}\n        targetId=\"twitch-embed\"\n        width=\"100%\"\n        layout=\"video-with-chat\"\n      />\n    </div>\n  );\n};\n","import React from 'react'\n\nexport const About = () => (\n    <div>\n        <p>About</p>\n    </div>\n)","import React, { useState, useEffect } from \"react\";\nimport \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nfunction simulateNetworkRequest() {\n  return new Promise((resolve) => setTimeout(resolve, 2000));\n}\n\nexport const Contact = () => {\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [isLoading]);\n\n  const handleClick = () => setLoading(true);\n  return (\n    <div>\n      <hi>To: pauldinb@gmail.com</hi>\n      <Form>\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n          <Form.Label>From:</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlInput2\">\n          <Form.Label>Subject</Form.Label>\n          <Form.Control type=\"subject\" placeholder=\"Subject\" />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlTextarea3\">\n          <Form.Label>Message</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"3\" />\n        </Form.Group>\n        <Button\n          style={{ backgroundColor: \"#326e2e\" }}\n          type=\"submit\"\n          disabled={isLoading}\n          onClick={!isLoading ? handleClick : null}\n        >\n          {isLoading ? \"Submittingâ€¦\" : \"Submit\"}\n        </Button>\n      </Form>\n    </div>\n  );\n};\n","import React from 'react'\n\nexport const NoMatch = () => (\n    <div>\n        <p>404 Not Found</p>\n    </div>\n)","import React from 'react';\nimport {Container} from 'react-bootstrap';\n\nexport const Layout = (props) => (\n    <Container>\n        {props.children}\n    </Container>\n)","import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #326e2e;\n  }\n  .navbar-brand,\n  .navbar-nav .nav-link {\n    color: #bbb;\n    &:hover {\n      color: white;\n    }\n    &:visited {\n      color: #bbb;\n    }\n    &:active {\n      color: #ffff00;\n    }\n  }\n`;\n\nexport const NavigationBar = () => (\n  <Styles>\n    <Navbar expand=\"lg\">\n      <Navbar.Brand href=\"/\">Pauldin Bebla</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Item>\n            <Nav.Link href=\"/\">Home</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/about\">About</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/contact\">Contact</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"https://github.com/pbebla\" target=\"_blank\">\n              Github\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link\n              href=\"https://www.linkedin.com/in/pauldin-bebla-63b87013a/\"\n              target=\"_blank\"\n            >\n              Linkedin\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles>\n);\n","import React from \"react\";\nimport { Jumbotron as Jumbo, Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport Cyna from \"../assets/Attempt3.png\";\n\nconst Styles = styled.div`\n  .jumbotron {\n    background: url(${Cyna}) no-repeat;\n    background-size: cover;\n    background-position: center;\n    color: #ccc;\n    height: 200px;\n    position: relative;\n    z-index: 0;\n  }\n  .overlay {\n    background-color: #000;\n    opacity: 0.6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n  }\n`;\n\nexport const Jumbotron = () => (\n  <Styles>\n    <Jumbo fluid className=\"jumbo\">\n      <div className=\"overlay\"></div>\n      <Container>\n        <h1>Welcome</h1>\n        <p>VVVVV</p>\n      </Container>\n    </Jumbo>\n  </Styles>\n);\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./Home\";\nimport { About } from \"./About\";\nimport { Contact } from \"./Contact\";\nimport { NoMatch } from \"./NoMatch\";\nimport { Layout } from \"./components/Layout\";\nimport { NavigationBar } from \"./components/NavigationBar\";\nimport { Jumbotron } from \"./components/Jumbotron\";\nimport Background from \"./assets/ACS_SC_39_SDCC_EvieAssassination_watermark_211604.0.jpg\";\n\nfunction App() {\n  return (\n    <div style={{ backgroundImage: `url(${Background})` }}>\n      <React.Fragment>\n        <NavigationBar />\n        <Jumbotron />\n        <Layout>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/contact\" component={Contact} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Router>\n        </Layout>\n      </React.Fragment>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}